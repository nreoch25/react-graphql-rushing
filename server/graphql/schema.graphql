type User {
  _id: ID!
  username: String!
  email: String!
}

type Player {
  _id: ID!
  team: String!
  name: String!
  position: String!
  attempts: Int!
  attemptsPerGame: Float!
  yards: String!
  averagePerCarry: Float!
  yardsPerGame: Float!
  td: Int
  longRush: String!
  firstDowns: Int!
  firstDownPercentage: Float!
  twentyPlus: Int!
  fortyPlus: Int!
  fumbles: Int
}

type Message {
  _id: ID!
  text: String!
  sender: User!
}

type SuccessMessage {
  message: String
}

type Auth {
  token: String!
}

type Query {
  users: [User!]!
  me: User
  messages: [Message!]!
  players: [Player!]!
}

type Mutation {
  signupUser(username: String!, email: String!, password: String!, passwordConfirm: String!): Auth!
  signinUser(email: String!, password: String!): Auth!
  signoutUser: SuccessMessage!
  requestReset(email: String!): SuccessMessage!
  resetPassword(password: String!, passwordConfirm: String!, resetToken: String!): User!
  postMessage(text: String!): Message!
}

type Subscription {
  newMessage: Message!
}
